# Use the default nginx user or remove user directive for OpenShift
worker_processes auto;

# Log to stderr/stdout for better container logging
error_log /dev/stderr warn;
pid /tmp/nginx.pid;

events {
    worker_connections 1024;
}

http {
    # Use /tmp for temporary files to ensure writeability
    client_body_temp_path /tmp/client_body_temp;
    proxy_temp_path /tmp/proxy_temp;
    fastcgi_temp_path /tmp/fastcgi_temp;
    uwsgi_temp_path /tmp/uwsgi_temp;
    scgi_temp_path /tmp/scgi_temp;

    # Ensure these directories exist and are writable
    # OpenShift may require these to be in a writable location
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging to stdout/stderr for container compatibility
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /dev/stdout  main;

    # Performance optimizations
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65;
    types_hash_max_size 2048;

    # Disable server tokens for security
    server_tokens off;

    # OpenShift typically uses a non-standard port
    server {
        # Listen on port 8080 (non-root port for OpenShift)
        listen       8080;
        server_name  localhost;

        # Root directory for static files
        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
            try_files $uri $uri/ =404;
        }

        # Improved error handling
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        # Security headers (optional but recommended)
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Content-Type-Options "nosniff";

        # Disable access logging for health checks
        location /healthz {
            access_log off;
            return 200 "healthy\n";
        }
    }

    # Additional security: limit request size
    client_max_body_size 10M;
}
